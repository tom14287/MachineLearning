re: asynchron i/o (wa re: gasp!)adam beberg write:
> on tue, 3 sep 2002, kragen sitak wrote:
> > unix acquir nonblock i/o in the form of select() about 23 year
> > ago, and solari ha had the particular aio_* call we ar discuss
> > for mani year.
> 
> select() "scale" is a joke at best, and i know you know that. poll() is
> onli a bit better.

not onli do i know that, the post to which you were respond
explain that, with somewhat more detail than "a joke".  as you
should know, but evid don't, poll() isn't even "a bit better" ---
in fact, it's about an order of magnitud wors --- for dens file
descriptor set, which is the normal case.  (except on oper
system where select() isn't a system call but a librari routin that
call poll().)

> > veri few applic need the aio_* call --- essenti onli
> > high-perform rdbm server even benefit from them at all, and
> > most of those have been fake it fine for a while with multipl
> > thread or process.  thi just provid a modicum of extra
> > perform.
> 
> wrong, it make a huge differ in even what i consid small program.

why don't you explain thi in more detail?

> > although i don't have a copi of the spec handi, i think the aio_* api
> > come from the posix spec ieee std 1003.1-1990, section 6.7.9, which is
> > 13 year old, and which i think document then-current practic.
> > thei might be even older than that.
> 
> ye, sgi ha a patch to the linux kernel to implement the aio_ interfac,
> but it's still not built in, who know when it will be. the point is it's
> not portabl in either case.

you origin said:

  could it be? after 20 year without thi featur unix final
  catch up to window and ha i/o that doesnt [sic] total suck for
  nontrivi app? no wai!

the point --- my point, the point i wa discuss; pleas don't try
to tell me you were try to make a differ point, becaus i don't
care --- is that you had no clue what you were talk about; unix
hasn't been without thi featur, and in fact ha had it sinc you
were in elementari school, and oper system without it don't
"total suck for nontrivi app".

for what it's worth, glibc ha actual implement the aio_* call
for a while, just in a wai that doesn't scale to larg number of
concurr i/o request.  i find refer to the glibc
implement as far back as 1999 and glibc 2.1.1, and i could
probabl find much earlier refer if i had time:
http://sourc.redhat.com/ml/libc-hacker/1999-12/msg00070.html

(more detail at
http://www.atnf.csiro.au/peopl/rgooch/linux/doc/io-event.html;
detail on the sgi patch ar at
http://oss.sgi.com/project/kaio/faq.html)

> > unix ha been multiprocess sinc 1969, and most unix implement
> > have support multithread for a decad or more.
> 
> and most unix is still kinda-sorta support the pthread (posix)
> interfac, each in their own 7/8 implement. you're safe if you
> stick to the basic.

your origin complaint wa that unix didn't do multithread or
multiprogram well.  now that i've point out how obvious
idiot that claim is, you've amend your complaint: now, although
individu unix do these thing well, you complain that their
implement ar not entir conform with the posix thread
specif.  well, that's probabl true, but i haven't written
pthread program in c much myself, so i can't confirm it from my own
experi.  but, even if it's true, it's not a veri good reason to
prefer window.

i'm sure you can provid exampl of bug in particular thread
implement.  spare us.  just shut up.

-- 
       kragen sitak     
edsger wybe dijkstra di in august of 2002.  the world ha lost a great
man.  see http://advogato.org/person/raph/diari.html?start=252 and
http://www.kode-fu.com/geek/2002_08_04_archiv.shtml for detail.

