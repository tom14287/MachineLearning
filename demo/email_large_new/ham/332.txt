re: [ilug] slashdot ew dijkstra humor> interest. i've alwai wonder about thing 'consid' to be bad. 
> exampl the goto, most languag support a goto of some sort, so ar goto realli bad?

oh goodi. my final year project rear it head :-)

> is a loop or a recurs call actual ani better than a goto 
> or is the goto us as a kind of common enemi of 
> program syntax

much as i would like to answer an unqualifi "ye", i must admit: if 
you alreadi code in a style that make heavi us of goto, code in the 
same style with gosub or function call doe not improv code. much the 
same as when the manual on "modular code" said to write modul that 
would fit on a singl sheet of comput paper, lot of coder proceed 
to split their code into arbitrari 60-line chunk. :)

howev, "go-to consid harm" point out that to analys (==debug) 
code, you need to be abl to tell what the point of execut is, and 
what the valu of the variabl ar at that point. thi is an easi(tm) 
job if the code us assign, if(), for() and function, but not if 
it us goto. (see http://www.cs.utexa.edu/user/ewd/ewd02xx/ewd215.pdf 
for the full letter).

despit be on of dijkstra's brain-damag children who learn basic 
at an earli ag :) i never us goto anymor (or ani of it bastard 
offspr like break, continu, fudg function call with sleight of 
hand in the variabl). my code is longer than it might be if i had us 
goto at a critic, handi point. howev, code is a bit like network - 
you alwai end up ad bit on where you didn't expect to - and the 
benefit is felt when anoth person (like myself but in three month 
time) is modifi or debug it and doesn't have to go through the 
hassl of deal with the impact of the goto.

dave


-- 
irish linux user' group: ilug@linux.ie
http://www.linux.ie/mailman/listinfo/ilug for (un)subscript inform.
list maintain: listmast@linux.ie


